events {}
http {
    upstream megadocu {
        server megadocu:80;
    }

    upstream megagoal {
        server megagoal:80;
    }
    
    upstream megaauth {
        server megaauth:80;
    }
    
    upstream megahome {
        server megahome:80;
    }

    server {
        listen 80;
        server_name megagera.com megadocu.megagera.com megagoal.megagera.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name megadocu.megagera.com;

        ssl_certificate     /etc/nginx/certificates/wildcard/fullchain.pem;
        ssl_certificate_key /etc/nginx/certificates/wildcard/privkey.pem;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        location / {
            auth_request /validate;
            error_page 401 = @error401;
            
            proxy_pass http://megadocu;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /validate {
            internal;
            proxy_pass http://megaauth/validate/megadocu;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location @error401 {
            return 302 https://megaauth.megagera.com/?redirect=$scheme://$host$request_uri;
        }
        
    }

    server {
        listen 443 ssl;
        server_name megagoal.megagera.com;
      
        ssl_certificate     /etc/nginx/certificates/wildcard/fullchain.pem;
        ssl_certificate_key /etc/nginx/certificates/wildcard/privkey.pem;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        location / {
            auth_request /validate;
            error_page 401 = @error401;
            
            proxy_pass http://megagoal;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /validate {
            internal;
            proxy_pass http://megaauth/validate/megagoal;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location @error401 {
            return 302 https://megaauth.megagera.com/?redirect=$scheme://$host$request_uri;
        }
    }

    server { 
        listen 443 ssl;
        server_name megagera.com;
    
        ssl_certificate     /etc/nginx/certificates/fullchain.pem;
        ssl_certificate_key /etc/nginx/certificates/privkey.pem;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        location / {
            auth_request /validate;
            error_page 401 = @error401;
            
            proxy_pass http://megahome;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location = /validate {
            internal;
            proxy_pass http://megaauth/validate;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location @error401 {
            return 302 https://megaauth.megagera.com/?redirect=$scheme://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name megaauth.megagera.com;

        ssl_certificate     /etc/nginx/certificates/wildcard/fullchain.pem;
        ssl_certificate_key /etc/nginx/certificates/wildcard/privkey.pem;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        location / {
            proxy_pass http://megaauth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
}